# -*- encoding: utf-8 -*-
"""
Django settings for fog_api project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""
# from __future__ import absolute_import, unicode_literals

import datetime
import environ
import os

ROOT_DIR = environ.Path(__file__) - 3  # (/a/b/myfile.py - 3 = /)
APPS_DIR = ROOT_DIR.path('iot_mxchip')
env = environ.Env()

# MEDIA CONFIGURATION
# ------------------------------------------------------------------------------
# See: https://docs.djangoproject.com/en/dev/ref/settings/#media-root
MEDIA_ROOT = str(APPS_DIR('media'))

# See: https://docs.djangoproject.com/en/dev/ref/settings/#media-url
MEDIA_URL = '/media/'

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'sa4nq2i1cvc(*_w0if90vcz!y7_in5)ryrw))1*v@xayy3ob5#'


SITE_ID = 1

# Application definition
DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.postgres',
]

THIRD_PART_APPS = [
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'oauth2_provider',
    'django_hstore',
    'djcelery',
    'rest_framework_mongoengine',
    'django_mongoengine',
    'easy_thumbnails',
    'guardian',
]

LOCAL_APPS = [
    # 'product',
    # 'profiles',
    # 'device',
    # 'wechat',
    # 'app',
    # 'enduser',
    # 'userena',
    # 'team',
    # 'principal',
    # 'shadow',
    # 'finance',
    # 'frontend.business',
    # 'frontend.device_manager',
    # 'frontend.questionnaire',
    # 'ota',
    # 'oauth2',
    # 'schedule',
    # 'enduser_oauth2_provider',
    # 'story',
]
INSTALLED_APPS = DJANGO_APPS + THIRD_PART_APPS + LOCAL_APPS

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            str(APPS_DIR.path('templates')),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.media',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True
USE_L10N = True
USE_TZ = False
STATIC_URL = '/static/'
STATIC_ROOT = str(ROOT_DIR('staticfiles'))
STATICFILES_DIRS = (
    '/usr/local/python2.7.11/lib/python2.7/site-packages/django/contrib/admin/static/',
)
STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder"
)
ANONYMOUS_USER_ID = -1

# ===========================================
# 跨域配置
# =================
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = False
CORS_REPLACE_HTTPS_REFERER = True

# ===========================================
# COMMON_OAUTH2_PROVIDER Config
# ======================
OAUTH2_PROVIDER = {
    'SCOPES': {'read': 'Read scope', 'write': 'Write scope', 'groups': 'Access to your groups'},
    'OAUTH2_BACKEND_CLASS': 'oauth2.oauth2_backends.RestfulOAuthLibCore',
    'OAUTH2_VALIDATOR_CLASS': 'oauth2.validator.RefineOAuth2Validator',
    'REFRESH_TOKEN_EXPIRE_SECONDS': 14*24*60*60,
    'ACCESS_TOKEN_EXPIRE_SECONDS': 7*24*60*60,
    'AUTHORIZATION_CODE_EXPIRE_SECONDS': 5*60,
}

# ===========================================
# ENDUSER_OAUTH2_PROVIDER Config
# ======================
ENDUSER_OAUTH2_PROVIDER = {
    'SCOPES': {'read': 'Read scope', 'write': 'Write scope', 'groups': 'Access to your groups'},
    'OAUTH2_VALIDATOR_CLASS': 'enduser_oauth2_provider.oauth2_validators.RefineOAuth2Validator',
    'OAUTH2_BACKEND_CLASS': 'enduser_oauth2_provider.oauth2_backends.OAuthLibCore',
    'REFRESH_TOKEN_EXPIRE_SECONDS': 14*24*60*60,
    'ACCESS_TOKEN_EXPIRE_SECONDS': 7*24*60*60,
    'AUTHORIZATION_CODE_EXPIRE_SECONDS': 5*60,
}

# =============================================
# REST_FRAMEWORK Config
# =================
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
}

# ===============================================
# Userena Config
# =================
USERENA_ACTIVATION_REQUIRED = False
AUTH_PROFILE_MODULE = 'profiles.Profile'
USERENA_DISABLE_PROFILE_LIST = True
USERENA_MUGSHOT_SIZE = 140
USERENA_USE_HTTPS = False  # 关闭https
USERENA_HTML_EMAIL = True  # 邮件使用html
USERENA_ACTIVATION_RETRY = True
LOGIN_URL = "/v3/accounts/signin/"
# Add the Guardian and userena authentication backends
AUTHENTICATION_BACKENDS = (
    'userena.backends.UserenaAuthenticationBackend',
    'guardian.backends.ObjectPermissionBackend',
    'django.contrib.auth.backends.ModelBackend',
)

# ===============================================
# EMAIL CONFIGURATION
# =================
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = False
EMAIL_HOST = 'smtp.mxchip.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = 'service@mxchip.com'
EMAIL_HOST_PASSWORD = 'dou@150327'
DEFAULT_FROM_EMAIL = 'service@mxchip.com'

# ===============================================
# 验证码有效期
# =================
SMS_VERIFY_SECONDS = datetime.timedelta(seconds=600)
EMAIL_VERIFY_SECONDS = datetime.timedelta(seconds=600)

PRODUCTION_CONFIG = False

# ===============================================
# 百度iot套件账户信息
# =================
BAIDU_IOT_DOMAIN = 'iot.gz.baidubce.com'
BAIDU_RG_IOT_DOMAIN = 're.iot.gz.baidubce.com'
BAIDU_DM_IOT_DOMAIN = 'iotdm.gz.baidubce.com'
BAIDU_KAFKA_IOT_DOMAIN = 'kafka-api.gz.baidubce.com'
BAIDU_TSDB_DATA_DOMAIN = 'zrgtest042801.tsdb.iot.gz.baidubce.com'
# BAIDU_TSDB_DATA_DOMAIN = 'zrgtest080701.tsdb.iot.gz.baidubce.com'
BAIDU_TSDB_MANAGER_DOMAIN = 'tsdb.gz.baidubce.com'
BAIDU_ACCESS_KEY = 'fba8a9c577a443ab80d1f7111ea97ea3'
BAIDU_SECRET_KEY = '3181d962dff94ebd91a30035db68736a'
BAIDU_SMS_HOST = "sms.bj.baidubce.com"


# ===============================================
# Logging Config
# =================
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'}
        # 日志格式
    },
    'filters': {
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
        },
        'default': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'weblog/all.log',  # 日志输出文件
            'maxBytes': 1024 * 1024 * 50,  # 文件大小
            'backupCount': 5,  # 备份份数
            'formatter': 'standard',  # 使用哪种formatters日志格式
        },
        'error_handler': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'weblog/error.log',
            'maxBytes': 1024 * 1024 * 50,
            'backupCount': 5,
            'formatter': 'standard',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
        'request_handler': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'weblog/script.log',
            'maxBytes': 1024 * 1024 * 50,
            'backupCount': 5,
            'formatter': 'standard',
        },
        'scprits_handler': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'weblog/script.log',
            'maxBytes': 1024 * 1024 * 50,
            'backupCount': 5,
            'formatter': 'standard',
        },
        'celery_task_handler': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'weblog/celery_task.log',
            'maxBytes': 1024 * 1024 * 50,
            'backupCount': 5,
            'formatter': 'standard',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['default', 'console'],
            'level': 'INFO',
            'propagate': False
        },
        'django.request': {
            'handlers': ['request_handler'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'scripts': {
            'handlers': ['scprits_handler'],
            'level': 'INFO',
            'propagate': False
        },
        'error_logger': {
            'handlers': ['error_handler'],
            'level': 'ERROR',
            'propagate': False
        },
        'celery_task_logger': {
            'handlers': ['celery_task_handler'],
            'level': 'ERROR',
            'propagate': False
        },
    }
}

# ===============================================
# IP Config
# =================
# IPUser server host
IPUSER_HOST_V3 = 'https://ipuserapi.fogcloud.io/'
# IPUser API
IPUSER_API_V3 = {
    "sync_admin": "v3/accounts/admin/sync/",
}

# ===============================================
# Web后台验证码类型
# =================
WEB_BACKEND_VERCODE = "web_backend_vercode"
# WEB_BACKEND_PASSWORD_RESET_VERCODE = "web_backend_password_reset"
# WEB_BACKEND_ACTIVATE_VERCODE = "web_backend_activate"
# WEB_BACKEND_EMAIL_CHANGE_VERCODE = "web_backend_email_change"

# ===============================================
# 阿里大于短信相关数据
# =================
DAYU_MXCHIP_APPKEY = '23496932'
DAYU_MXCHIP_SECRET = 'b15bdc4ea1a52cf9179046836fdf1e6b'

# ===============================================
# 设置session有效期
# =================
# SESSION_SAVE_EVERY_REQUEST = True
# SESSION_COOKIE_AGE = 60*60*24

# ===============================================
# 支付宝账号相关数据
# =================
ALIPAY_PID = '2088221320261337'
ALIPAY_KEY = 'f551y9t3ydqypiz5vpv9d904yyutzyg0'
ALIPAY_SELLER_EMAIL = 'adminyun@mxchip.com'
ALIPAY_INPUT_CHARSET = 'utf-8'
ALIPAY_SIGN_TYPE = 'MD5'
ALIPAY_GATEWAY = 'https://mapi.alipay.com/gateway.do?'
ALIPAY_NOTIFY_GATEWAY = 'https://mapi.alipay.com/gateway.do?service=notify_verify&'


# ===============================================
# 站点flag
# =================
IS_MAIN_SITE = False
IS_DEV_SITE = False
IS_TEST_SITE = False
IS_LOCAL_SITE = False
IS_SEAL_SITE = False

# ===============================================
# 是否使用个推
# =================
USER_GETUI = False

# -*- coding: utf-8 -*-
# =====================================
# ===== Production Configurations =====
# =====================================
import djcelery

SECRET_KEY = env("DJANGO_SECRET_KEY", default='h!o1d!_=p7m1)02i^atq&saq$m0**f(+22q_54azwr62ytqxwg')

# DEBUG
# ------------------------------------------------------------------------------
DEBUG = env.bool('DJANGO_DEBUG', default=True)
TEMPLATES[0]['OPTIONS']['debug'] = DEBUG

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'mh_test',
        'USER': 'postgres',
        'PASSWORD': 'Mxchip@2018postgres',
        'HOST': 'rm-2zecdr93ug6ij58n0.pg.rds.aliyuncs.com',
        # 'HOST': 'rm-2zevc81xu6gi84bee2o.pg.rds.aliyuncs.com',
        'PORT': '3433',
        # 'NAME': 'fogcloud_v3_main',
        # 'USER': 'postgres',
        # 'PASSWORD': 'MXCHIP2016postgres',
        # 'HOST': 'rm-2zen8s40ei5l1n814.pg.rds.aliyuncs.com',
        # 'PORT': '3433',
    }
}
DATABASES['default']['ATOMIC_REQUESTS'] = True

MONGODB_DATABASES = {
    "default": {
        "name": 'mh_test',
        "host": 'dds-2ze220fff61d70c41.mongodb.rds.aliyuncs.com:3717',
        "username": 'admin',
        "password": 'admin',
       # "password": 'Zhrmghg@1949',
       #  "tz_aware": True,  # if you using timezones in django (USE_TZ = True)
    },
}

ALLOWED_HOSTS = env.list('DJANGO_ALLOWED_HOSTS', default=['*'])

INSTALLED_APPS += ("gunicorn",)

# ====== CELERY =====

djcelery.setup_loader()
INSTALLED_APPS += ('asynctasks.apps.celery.CeleryConfig',)
BROKER_URL = 'redis://localhost:6379/1'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/1'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_ENABLE_UTC = False
CELERY_TIMEZONE = 'Asia/Shanghai'
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'
C_FORCE_ROOT = True


# ===== END CELERY =====

# dev site mqtt
# MQTT_DOMAIN = '127.0.0.1'
# MQTT_PORT = 18831

# # cache
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.memcached.PyLibMCCache '
#     }
# }

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://:mxchip2016Redis@r-2ze1d471ea7d2fe4.redis.rds.aliyuncs.com:6379/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# 站点标识：True 国内站点，False 国外站点
PRODUCTION_INLAND = False

ALIPAY_RETURN_URL = 'https://mhtestapi.fogcloud.io/v3/finance/orderPayResult/'
ALIPAY_NOTIFY_URL = ''

# 测试站点标识
IS_TEST_SITE = True
